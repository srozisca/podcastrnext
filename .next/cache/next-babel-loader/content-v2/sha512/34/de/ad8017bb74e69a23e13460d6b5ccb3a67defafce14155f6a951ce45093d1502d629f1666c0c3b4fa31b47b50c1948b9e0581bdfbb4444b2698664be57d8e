{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projetos\\\\NLW\\\\podcastrnext\\\\src\\\\pages\\\\episodes\\\\[slug].tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nimport style from './episode.module.scss';\nexport default function Episode({\n  episode\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.episode,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.episode,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    url: data.file.url,\n    description: data.description\n  };\n  return {\n    props: {},\n    revalidate: 60 * 60 * 24 // 24 hours\n\n  };\n};","map":{"version":3,"sources":["C:/Projetos/NLW/podcastrnext/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","ptBR","api","convertDurationToTimeString","style","Episode","episode","getStaticPaths","paths","fallback","getStaticProps","ctx","slug","params","data","get","id","title","thumbnail","members","publishedAt","published_at","locale","duration","Number","file","durationAsString","url","description","props","revalidate"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;AAoBA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA4C;AACvD,sBACI;AAAK,IAAA,SAAS,EAAEF,KAAK,CAACE,OAAtB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEF,KAAK,CAACE,OAAtB;AAAA,6BACI;AAAQ,QAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACtD,SAAO;AACHC,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAe;AACzD,QAAM;AAAEC,IAAAA;AAAF,MAAWD,GAAG,CAACE,MAArB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMZ,GAAG,CAACa,GAAJ,CAAS,aAAYH,IAAK,EAA1B,CAAvB;AAEA,QAAMN,OAAO,GAAG;AACZU,IAAAA,EAAE,EAAEF,IAAI,CAACE,EADG;AAEZC,IAAAA,KAAK,EAAEH,IAAI,CAACG,KAFA;AAGZC,IAAAA,SAAS,EAAEJ,IAAI,CAACI,SAHJ;AAIZC,IAAAA,OAAO,EAAEL,IAAI,CAACK,OAJF;AAKZC,IAAAA,WAAW,EAAErB,MAAM,CAACC,QAAQ,CAACc,IAAI,CAACO,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAAEC,MAAAA,MAAM,EAAErB;AAAV,KAA1C,CALP;AAMZsB,IAAAA,QAAQ,EAAEC,MAAM,CAACV,IAAI,CAACW,IAAL,CAAUF,QAAX,CANJ;AAOZG,IAAAA,gBAAgB,EAAEvB,2BAA2B,CAACqB,MAAM,CAACV,IAAI,CAACW,IAAL,CAAUF,QAAX,CAAP,CAPjC;AAQZI,IAAAA,GAAG,EAAEb,IAAI,CAACW,IAAL,CAAUE,GARH;AASZC,IAAAA,WAAW,EAAEd,IAAI,CAACc;AATN,GAAhB;AAYA,SAAO;AACHC,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU,EAFnB,CAEsB;;AAFtB,GAAP;AAIH,CApBM","sourcesContent":["import { format, parseISO } from 'date-fns';\r\nimport ptBR from 'date-fns/locale/pt-BR';\r\nimport { GetStaticPaths, GetStaticProps } from 'next';\r\nimport { api } from '../../services/api';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\nimport style from './episode.module.scss';\r\nimport Image from 'next/image';\r\n\r\n\r\ntype Episode = {\r\n    id: string;\r\n    title: string;\r\n    thumbnail: string;\r\n    members: string;\r\n    duration: number;\r\n    durationAsString: string;\r\n    url: string;\r\n    publishedAt: string;\r\n    description: string;\r\n}\r\n\r\ntype EpisodeProps = {\r\n    episode: Episode;\r\n}\r\n\r\nexport default function Episode({ episode }: EpisodeProps) {\r\n    return (\r\n        <div className={style.episode}>\r\n            <div className={style.episode}>\r\n                <button type=\"button\"></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n    return {\r\n        paths: [],\r\n        fallback: 'blocking'\r\n    }\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async (ctx) => {\r\n    const { slug } = ctx.params;\r\n    const { data } = await api.get(`/episodes/${slug}`)\r\n\r\n    const episode = {\r\n        id: data.id,\r\n        title: data.title,\r\n        thumbnail: data.thumbnail,\r\n        members: data.members,\r\n        publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR }),\r\n        duration: Number(data.file.duration),\r\n        durationAsString: convertDurationToTimeString(Number(data.file.duration)),\r\n        url: data.file.url,\r\n        description: data.description,\r\n    };\r\n\r\n    return {\r\n        props: {},\r\n        revalidate: 60 * 60 * 24 // 24 hours\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}