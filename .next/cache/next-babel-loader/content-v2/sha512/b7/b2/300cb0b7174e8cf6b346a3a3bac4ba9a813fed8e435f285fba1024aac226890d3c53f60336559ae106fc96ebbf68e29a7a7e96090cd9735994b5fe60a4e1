{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projetos\\\\NLW\\\\podcastrnext\\\\src\\\\pages\\\\episodes\\\\[slug].tsx\";\nimport { format, parseISO } from 'date-fns';\nimport { useRouter } from 'next/router';\nimport { api } from '../../services/api';\nexport default function Episode() {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: router.query.slug\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episode/${slug}`);\n  const episodes = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {},\n    revalidate: 60 * 60 * 24\n  };\n};","map":{"version":3,"sources":["C:/Projetos/NLW/podcastrnext/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","useRouter","api","Episode","router","query","slug","getStaticProps","ctx","params","data","get","episodes","id","title","thumbnail","members","publishedAt","published_at","locale","ptBR","duration","Number","file","durationAsString","convertDurationToTimeString","description","url","props","revalidate"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,oBAApB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAC9B,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,sBACI;AAAA,cAAKG,MAAM,CAACC,KAAP,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AAGD,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAe;AACzD,QAAM;AAAEF,IAAAA;AAAF,MAAWE,GAAG,CAACC,MAArB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMR,GAAG,CAACS,GAAJ,CAAS,YAAWL,IAAK,EAAzB,CAAvB;AAEA,QAAMM,QAAQ,GAAG;AACbC,IAAAA,EAAE,EAAEH,IAAI,CAACG,EADI;AAEbC,IAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFC;AAGbC,IAAAA,SAAS,EAAEL,IAAI,CAACK,SAHH;AAIbC,IAAAA,OAAO,EAAEN,IAAI,CAACM,OAJD;AAKbC,IAAAA,WAAW,EAAElB,MAAM,CAACC,QAAQ,CAACU,IAAI,CAACQ,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAAEC,MAAAA,MAAM,EAAEC;AAAV,KAA1C,CALN;AAMbC,IAAAA,QAAQ,EAAEC,MAAM,CAACZ,IAAI,CAACa,IAAL,CAAUF,QAAX,CANH;AAObG,IAAAA,gBAAgB,EAAEC,2BAA2B,CAACH,MAAM,CAACZ,IAAI,CAACa,IAAL,CAAUF,QAAX,CAAP,CAPhC;AAQbK,IAAAA,WAAW,EAAEhB,IAAI,CAACgB,WARL;AASbC,IAAAA,GAAG,EAAEjB,IAAI,CAACa,IAAL,CAAUI;AATF,GAAjB;AAYA,SAAO;AACHC,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU;AAFnB,GAAP;AAIH,CApBM","sourcesContent":["import { format, parseISO } from 'date-fns';\r\nimport { GetStaticProps } from 'next';\r\nimport { useRouter } from 'next/router'\r\nimport { api } from '../../services/api';\r\n\r\nexport default function Episode() {\r\n    const router = useRouter();\r\n\r\n    return (\r\n        <h1>{router.query.slug}</h1>\r\n    )\r\n}\r\n\r\n\r\nexport const getStaticProps: GetStaticProps = async (ctx) => {\r\n    const { slug } = ctx.params;\r\n    const { data } = await api.get(`/episode/${slug}`)\r\n\r\n    const episodes = {\r\n        id: data.id,\r\n        title: data.title,\r\n        thumbnail: data.thumbnail,\r\n        members: data.members,\r\n        publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR }),\r\n        duration: Number(data.file.duration),\r\n        durationAsString: convertDurationToTimeString(Number(data.file.duration)),\r\n        description: data.description,\r\n        url: data.file.url,\r\n    };\r\n\r\n    return {\r\n        props: {},\r\n        revalidate: 60 * 60 * 24\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}