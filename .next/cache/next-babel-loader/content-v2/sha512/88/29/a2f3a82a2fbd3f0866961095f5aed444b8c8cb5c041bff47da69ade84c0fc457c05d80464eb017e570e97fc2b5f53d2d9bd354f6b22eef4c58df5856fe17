{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projetos\\\\NLW\\\\podcastrnext\\\\src\\\\components\\\\Player\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState } from 'react';\nimport Image from 'next/image';\nimport styles from './styles.module.scss';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { usePlayer } from '../../contexts/PlayerContext';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport function Player() {\n  _s();\n\n  var _episode$duration;\n\n  var audioRef = useRef(null);\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _usePlayer = usePlayer(),\n      episodeList = _usePlayer.episodeList,\n      currentEpisodeIndex = _usePlayer.currentEpisodeIndex,\n      isPlaying = _usePlayer.isPlaying,\n      isLooping = _usePlayer.isLooping,\n      isShuffling = _usePlayer.isShuffling,\n      togglePlay = _usePlayer.togglePlay,\n      toggleLoop = _usePlayer.toggleLoop,\n      toggleShuffle = _usePlayer.toggleShuffle,\n      setPlayingState = _usePlayer.setPlayingState,\n      playNext = _usePlayer.playNext,\n      playPrevious = _usePlayer.playPrevious,\n      hasNext = _usePlayer.hasNext,\n      hasPrevious = _usePlayer.hasPrevious;\n\n  useEffect(function () {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', function (event) {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  }\n\n  function handleSeek(amount) {\n    audioRef.current.currentTime = amount;\n    setProgress(amount);\n  }\n\n  var episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando agora \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: styles.empty,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            max: episode.duration,\n            value: progress,\n            onChange: handleSeek,\n            trackStyle: {\n              backgroundColor: '#84d361'\n            },\n            railStyle: {\n              backgroundColor: '#9f75ff'\n            },\n            handleStyle: {\n              borderColor: '#84d361',\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        autoPlay: true,\n        loop: isLooping,\n        onPlay: function onPlay() {\n          return setPlayingState(true);\n        },\n        onPause: function onPause() {\n          return setPlayingState(false);\n        },\n        onLoadedMetadata: setupProgressListener\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length === 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playPrevious,\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Pausar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Toca pr\\xF3ximar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Player, \"dRKHo2WchQlidrM717m3xxjOYgw=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Projetos/NLW/podcastrnext/src/components/Player/index.tsx"],"names":["useRef","useEffect","useState","Image","styles","Slider","usePlayer","convertDurationToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","isLooping","isShuffling","togglePlay","toggleLoop","toggleShuffle","setPlayingState","playNext","playPrevious","hasNext","hasPrevious","current","play","pause","setupProgressListener","currentTime","addEventListener","event","Math","floor","handleSeek","amount","episode","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","slider","duration","backgroundColor","borderColor","borderWidth","emptySlider","url","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["import { useRef, useEffect, useState } from 'react';\r\nimport Image from 'next/image';\r\nimport styles from './styles.module.scss';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport { usePlayer } from '../../contexts/PlayerContext';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\nexport function Player() {\r\n    const audioRef = useRef<HTMLAudioElement>(null);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    const {\r\n        episodeList,\r\n        currentEpisodeIndex,\r\n        isPlaying,\r\n        isLooping,\r\n        isShuffling,\r\n        togglePlay,\r\n        toggleLoop,\r\n        toggleShuffle,\r\n        setPlayingState,\r\n        playNext,\r\n        playPrevious,\r\n        hasNext,\r\n        hasPrevious\r\n    } = usePlayer();\r\n\r\n    useEffect(() => {\r\n        if (!audioRef.current) {\r\n            return;\r\n        }\r\n\r\n        if (isPlaying) {\r\n            audioRef.current.play();\r\n        } else {\r\n            audioRef.current.pause();\r\n        }\r\n\r\n    }, [isPlaying])\r\n\r\n    function setupProgressListener() {\r\n        audioRef.current.currentTime = 0;\r\n\r\n        audioRef.current.addEventListener('timeupdate', event => {\r\n            setProgress(Math.floor(audioRef.current.currentTime))\r\n        })\r\n    }\r\n\r\n    function handleSeek(amount: number) {\r\n        audioRef.current.currentTime = amount;\r\n        setProgress(amount);\r\n    }\r\n\r\n    const episode = episodeList[currentEpisodeIndex];\r\n\r\n    return (\r\n        <div className={styles.playerContainer}>\r\n            <header>\r\n                <img src=\"/playing.svg\" alt=\"Tocando agora\" />\r\n                <strong>Tocando agora </strong>\r\n            </header>\r\n\r\n            { episode ? (\r\n                <div className={styles.currentEpisode}>\r\n                    <Image\r\n                        width={592}\r\n                        height={592}\r\n                        src={episode.thumbnail}\r\n                        objectFit=\"cover\"\r\n                    />\r\n                    <strong>{episode.title}</strong>\r\n                    <span>{episode.members}</span>\r\n                </div>\r\n\r\n\r\n            ) : (\r\n                <div className={styles.emptyPlayer} />\r\n            )}\r\n\r\n            <footer className={styles.empty}>\r\n                <div className={styles.progress}>\r\n                    <span>{convertDurationToTimeString(progress)}</span>\r\n                    <div className={styles.slider}>\r\n                        {episode ? (\r\n                            <Slider\r\n                                max={episode.duration}\r\n                                value={progress}\r\n                                onChange={handleSeek}\r\n                                trackStyle={{ backgroundColor: '#84d361' }}\r\n                                railStyle={{ backgroundColor: '#9f75ff' }}\r\n                                handleStyle={{ borderColor: '#84d361', borderWidth: 4 }}\r\n                            />\r\n                        ) : (\r\n                            <div className={styles.emptySlider} />\r\n                        )}\r\n                    </div>\r\n                    <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\r\n                </div>\r\n\r\n                {episode && (\r\n                    <audio\r\n                        src={episode.url}\r\n                        ref={audioRef}\r\n                        autoPlay\r\n                        loop={isLooping}\r\n                        onPlay={() => setPlayingState(true)}\r\n                        onPause={() => setPlayingState(false)}\r\n                        onLoadedMetadata={setupProgressListener}\r\n                    />\r\n                )}\r\n\r\n                <div className={styles.buttons}>\r\n                    <button\r\n                        type=\"button\"\r\n                        disabled={!episode || episodeList.length === 1}\r\n                        onClick={toggleShuffle}\r\n                        className={isShuffling ? styles.isActive : ''}\r\n                    >\r\n                        <img src=\"/shuffle.svg\" alt=\"Embaralhar\" />\r\n                    </button>\r\n                    <button type=\"button\" onClick={playPrevious} disabled={!episode || !hasPrevious}>\r\n                        <img src=\"/play-previous.svg\" alt=\"Tocar anterior\" />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className={styles.playButton}\r\n                        disabled={!episode}\r\n                        onClick={togglePlay}\r\n                    >\r\n                        {isPlaying\r\n                            ? <img src=\"/play.svg\" alt=\"Tocar\" />\r\n                            : <img src=\"/pause.svg\" alt=\"Pausar\" />\r\n                        }\r\n                    </button>\r\n                    <button type=\"button\" onClick={playNext} disabled={!episode || !hasNext}>\r\n                        <img src=\"/play-next.svg\" alt=\"Toca próximar\" />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        disabled={!episode}\r\n                        onClick={toggleLoop}\r\n                        className={isLooping ? styles.isActive : ''}\r\n                    >\r\n                        <img src=\"/repeat.svg\" alt=\"Repetir\" />\r\n                    </button>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}