{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projetos\\\\NLW\\\\podcastrnext\\\\src\\\\pages\\\\index.tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\nimport styles from './home.module.scss';\nexport default function Home({\n  latestEpisodes,\n  allEpisodes\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.homepage,\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.latestEpisodes,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xDAltimos Lan\\xE7amentos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: latestEpisodes.map(episode => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              scr: episode.thumbnail,\n              alt: episode.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"\",\n                children: episode.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: episode.members\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: episode.publishedAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: episode.durationAsString\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/play-screen.svg\",\n                alt: \"Tocar epis\\xF3dio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)]\n          }, episode.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.allEpisodes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', {\n        locale: ptBR\n      }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url\n    };\n  });\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.length);\n  return {\n    props: {\n      latestEpisodes,\n      allEpisodes\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["C:/Projetos/NLW/podcastrnext/src/pages/index.tsx"],"names":["format","parseISO","ptBR","api","convertDurationToTimeString","styles","Home","latestEpisodes","allEpisodes","homepage","map","episode","thumbnail","title","members","publishedAt","durationAsString","id","getStaticProps","data","get","params","_limit","_sort","_order","episodes","published_at","locale","duration","Number","file","description","url","slice","length","props","revalidate"],"mappings":"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","sourcesContent":["import { GetStaticProps } from 'next';\nimport Image from 'next/image';\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\n\nimport styles from './home.module.scss';\n\ntype Episode = {\n  id: string;\n  title: string;\n  thumbnail: string;\n  description: string;\n  members: string;\n  duration: number;\n  durationAsString: string;\n  url: string;\n  publishedAt: string;\n}\n\ntype HomeProps = {\n  latestEpisodes: Episode[];\n  allEpisodes: Episode[];\n}\n\nexport default function Home({ latestEpisodes, allEpisodes }: HomeProps) {\n  return (\n    <div className={styles.homepage}>\n      <section className={styles.latestEpisodes}>\n        <h2>Últimos Lançamentos</h2>\n        <ul>\n          {latestEpisodes.map(episode => {\n            return (\n              <li key={episode.id}>\n                <img scr={episode.thumbnail} alt={episode.title} />\n\n                <div>\n                  <a href=\"\">{episode.title}</a>\n                  <p>{episode.members}</p>\n                  <span>{episode.publishedAt}</span>\n                  <span>{episode.durationAsString}</span>\n                </div>\n\n                <button type=\"button\">\n                  <img src=\"/play-screen.svg\" alt=\"Tocar episódio\" />\n                </button>\n              </li>\n            )\n\n          })}\n        </ul>\n\n      </section>\n\n      <section className={styles.allEpisodes}>\n\n      </section>\n    </div >\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const { data } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n\n\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', { locale: ptBR }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url,\n    }\n  })\n\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.length);\n\n  return {\n    props: {\n      latestEpisodes,\n      allEpisodes,\n    },\n    revalidate: 60 * 60 * 8,\n  }\n\n}"]},"metadata":{},"sourceType":"module"}