{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projetos\\\\NLW\\\\podcastrnext\\\\src\\\\pages\\\\index.tsx\";\nimport Image from 'next/image';\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\nimport styles from './home.module.scss';\nexport default function Home({\n  latestEpisodes,\n  allEpisodes\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.homepage,\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.latestEpisodes,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xDAltimos Lan\\xE7amentos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: latestEpisodes.map(episode => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              width: 192,\n              height: 192,\n              src: episode.thumbnail,\n              alt: episode.title,\n              objectFit: \"cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.episodesDetails,\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"\",\n                children: episode.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: episode.members\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: episode.publishedAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: episode.durationAsString\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/play-green.svg\",\n                alt: \"Tocar epis\\xF3dio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, episode.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.allEpisodes,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todos epis\\xF3dios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        cellSpacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Podcast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Integrantes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Dura\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allEpisodes.map(episode => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  width: 120,\n                  height: 120,\n                  src: episode.thumbnail,\n                  alt: episode.title,\n                  objectFit: \"cover\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"\",\n                  children: episode.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)]\n            }, episode.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', {\n        locale: ptBR\n      }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url\n    };\n  });\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.length);\n  return {\n    props: {\n      latestEpisodes,\n      allEpisodes\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["C:/Projetos/NLW/podcastrnext/src/pages/index.tsx"],"names":["Image","format","parseISO","ptBR","api","convertDurationToTimeString","styles","Home","latestEpisodes","allEpisodes","homepage","map","episode","thumbnail","title","episodesDetails","members","publishedAt","durationAsString","id","getStaticProps","data","get","params","_limit","_sort","_order","episodes","published_at","locale","duration","Number","file","description","url","slice","length","props","revalidate"],"mappings":"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","sourcesContent":["import { GetStaticProps } from 'next';\nimport Image from 'next/image';\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\n\nimport styles from './home.module.scss';\n\ntype Episode = {\n  id: string;\n  title: string;\n  thumbnail: string;\n  description: string;\n  members: string;\n  duration: number;\n  durationAsString: string;\n  url: string;\n  publishedAt: string;\n}\n\ntype HomeProps = {\n  latestEpisodes: Episode[];\n  allEpisodes: Episode[];\n}\n\nexport default function Home({ latestEpisodes, allEpisodes }: HomeProps) {\n  return (\n    <div className={styles.homepage}>\n      <section className={styles.latestEpisodes}>\n        <h2>Últimos Lançamentos</h2>\n        <ul>\n          {latestEpisodes.map(episode => {\n            return (\n              <li key={episode.id}>\n                <Image\n                  width={192}\n                  height={192}\n                  src={episode.thumbnail}\n                  alt={episode.title}\n                  objectFit=\"cover\"\n                />\n\n                <div className={styles.episodesDetails}>\n                  <a href=\"\">{episode.title}</a>\n                  <p>{episode.members}</p>\n                  <span>{episode.publishedAt}</span>\n                  <span>{episode.durationAsString}</span>\n                </div>\n\n                <button type=\"button\">\n                  <img src=\"/play-green.svg\" alt=\"Tocar episódio\" />\n                </button>\n              </li>\n            )\n\n          })}\n        </ul>\n\n      </section>\n\n      <section className={styles.allEpisodes}>\n        <h2>Todos episódios</h2>\n\n        <table cellSpacing={0}>\n          <thead>\n            <th></th>\n            <th>Podcast</th>\n            <th>Integrantes</th>\n            <th>Data</th>\n            <th>Duração</th>\n            <th></th>\n          </thead>\n          <tbody>\n            {allEpisodes.map(episode => {\n              return (\n                <tr key={episode.id}>\n                  <td>\n                    <Image\n                      width={120}\n                      height={120}\n                      src={episode.thumbnail}\n                      alt={episode.title}\n                      objectFit=\"cover\"\n                    />\n                  </td>\n                  <td>\n                    <a href=\"\">{episode.title}</a>\n                  </td>\n\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </section>\n    </div >\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const { data } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n\n\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', { locale: ptBR }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url,\n    }\n  })\n\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.length);\n\n  return {\n    props: {\n      latestEpisodes,\n      allEpisodes,\n    },\n    revalidate: 60 * 60 * 8,\n  }\n\n}"]},"metadata":{},"sourceType":"module"}