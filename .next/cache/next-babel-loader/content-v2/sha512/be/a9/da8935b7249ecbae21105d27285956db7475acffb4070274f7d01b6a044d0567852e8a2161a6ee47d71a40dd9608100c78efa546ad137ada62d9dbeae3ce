{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projetos\\\\NLW\\\\podcastrnext\\\\src\\\\components\\\\Player\\\\index.tsx\";\nimport { useRef, useEffect, useState } from 'react';\nimport Image from 'next/image';\nimport styles from './styles.module.scss';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { usePlayer } from '../../contexts/PlayerContext';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport function Player() {\n  var _episode$duration;\n\n  const audioRef = useRef(null);\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  const {\n    episodeList,\n    currentEpisodeIndex,\n    isPlaying,\n    isLooping,\n    isShuffling,\n    togglePlay,\n    toggleLoop,\n    toggleShuffle,\n    setPlayingState,\n    playNext,\n    playPrevious,\n    hasNext,\n    hasPrevious\n  } = usePlayer();\n  useEffect(() => {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n  const episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando agora \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: styles.empty,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            trackStyle: {\n              backgroundColor: '#84d361'\n            },\n            railStyle: {\n              backgroundColor: '#9f75ff'\n            },\n            handleStyle: {\n              borderColor: '#84d361',\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        autoPlay: true,\n        loop: isLooping,\n        onPlay: () => setPlayingState(true),\n        onPause: () => setPlayingState(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length === 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playPrevious,\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Pausar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Toca pr\\xF3ximar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Projetos/NLW/podcastrnext/src/components/Player/index.tsx"],"names":["useRef","useEffect","useState","Image","styles","Slider","usePlayer","convertDurationToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","isLooping","isShuffling","togglePlay","toggleLoop","toggleShuffle","setPlayingState","playNext","playPrevious","hasNext","hasPrevious","current","play","pause","episode","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","slider","backgroundColor","borderColor","borderWidth","emptySlider","duration","url","buttons","length","isActive","playButton"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,4BAAP;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AAEA,OAAO,SAASC,MAAT,GAAkB;AAAA;;AACrB,QAAMC,QAAQ,GAAGT,MAAM,CAAmB,IAAnB,CAAvB;AACA,QAAM;AAAA,OAACU,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AACFU,IAAAA,WADE;AAEFC,IAAAA,mBAFE;AAGFC,IAAAA,SAHE;AAIFC,IAAAA,SAJE;AAKFC,IAAAA,WALE;AAMFC,IAAAA,UANE;AAOFC,IAAAA,UAPE;AAQFC,IAAAA,aARE;AASFC,IAAAA,eATE;AAUFC,IAAAA,QAVE;AAWFC,IAAAA,YAXE;AAYFC,IAAAA,OAZE;AAaFC,IAAAA;AAbE,MAcFlB,SAAS,EAdb;AAgBAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACQ,QAAQ,CAACgB,OAAd,EAAuB;AACnB;AACH;;AAED,QAAIX,SAAJ,EAAe;AACXL,MAAAA,QAAQ,CAACgB,OAAT,CAAiBC,IAAjB;AACH,KAFD,MAEO;AACHjB,MAAAA,QAAQ,CAACgB,OAAT,CAAiBE,KAAjB;AACH;AAEJ,GAXQ,EAWN,CAACb,SAAD,CAXM,CAAT;AAaA,QAAMc,OAAO,GAAGhB,WAAW,CAACC,mBAAD,CAA3B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAET,MAAM,CAACyB,eAAvB;AAAA,4BACI;AAAA,8BACI;AAAK,QAAA,GAAG,EAAC,cAAT;AAAwB,QAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAMMD,OAAO,gBACL;AAAK,MAAA,SAAS,EAAExB,MAAM,CAAC0B,cAAvB;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,KAAK,EAAE,GADX;AAEI,QAAA,MAAM,EAAE,GAFZ;AAGI,QAAA,GAAG,EAAEF,OAAO,CAACG,SAHjB;AAII,QAAA,SAAS,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,kBAASH,OAAO,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA,kBAAOJ,OAAO,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBAcL;AAAK,MAAA,SAAS,EAAE7B,MAAM,CAAC8B;AAAvB;AAAA;AAAA;AAAA;AAAA,YApBR,eAuBI;AAAQ,MAAA,SAAS,EAAE9B,MAAM,CAAC+B,KAA1B;AAAA,8BACI;AAAK,QAAA,SAAS,EAAE/B,MAAM,CAACM,QAAvB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAEN,MAAM,CAACgC,MAAvB;AAAA,oBACKR,OAAO,gBACJ,QAAC,MAAD;AACI,YAAA,UAAU,EAAE;AAAES,cAAAA,eAAe,EAAE;AAAnB,aADhB;AAEI,YAAA,SAAS,EAAE;AAAEA,cAAAA,eAAe,EAAE;AAAnB,aAFf;AAGI,YAAA,WAAW,EAAE;AAAEC,cAAAA,WAAW,EAAE,SAAf;AAA0BC,cAAAA,WAAW,EAAE;AAAvC;AAHjB;AAAA;AAAA;AAAA;AAAA,kBADI,gBAOJ;AAAK,YAAA,SAAS,EAAEnC,MAAM,CAACoC;AAAvB;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAaI;AAAA,oBAAOjC,2BAA2B,sBAACqB,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEa,QAAV,iEAAsB,CAAtB;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAiBKb,OAAO,iBACJ;AACI,QAAA,GAAG,EAAEA,OAAO,CAACc,GADjB;AAEI,QAAA,GAAG,EAAEjC,QAFT;AAGI,QAAA,QAAQ,MAHZ;AAII,QAAA,IAAI,EAAEM,SAJV;AAKI,QAAA,MAAM,EAAE,MAAMK,eAAe,CAAC,IAAD,CALjC;AAMI,QAAA,OAAO,EAAE,MAAMA,eAAe,CAAC,KAAD;AANlC;AAAA;AAAA;AAAA;AAAA,cAlBR,eA4BI;AAAK,QAAA,SAAS,EAAEhB,MAAM,CAACuC,OAAvB;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,QAAQ,EAAE,CAACf,OAAD,IAAYhB,WAAW,CAACgC,MAAZ,KAAuB,CAFjD;AAGI,UAAA,OAAO,EAAEzB,aAHb;AAII,UAAA,SAAS,EAAEH,WAAW,GAAGZ,MAAM,CAACyC,QAAV,GAAqB,EAJ/C;AAAA,iCAMI;AAAK,YAAA,GAAG,EAAC,cAAT;AAAwB,YAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEvB,YAA/B;AAA6C,UAAA,QAAQ,EAAE,CAACM,OAAD,IAAY,CAACJ,WAApE;AAAA,iCACI;AAAK,YAAA,GAAG,EAAC,oBAAT;AAA8B,YAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ,eAYI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,SAAS,EAAEpB,MAAM,CAAC0C,UAFtB;AAGI,UAAA,QAAQ,EAAE,CAAClB,OAHf;AAII,UAAA,OAAO,EAAEX,UAJb;AAAA,oBAMKH,SAAS,gBACJ;AAAK,YAAA,GAAG,EAAC,WAAT;AAAqB,YAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADI,gBAEJ;AAAK,YAAA,GAAG,EAAC,YAAT;AAAsB,YAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AARV;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAuBI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEO,QAA/B;AAAyC,UAAA,QAAQ,EAAE,CAACO,OAAD,IAAY,CAACL,OAAhE;AAAA,iCACI;AAAK,YAAA,GAAG,EAAC,gBAAT;AAA0B,YAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAvBJ,eA0BI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,QAAQ,EAAE,CAACK,OAFf;AAGI,UAAA,OAAO,EAAEV,UAHb;AAII,UAAA,SAAS,EAAEH,SAAS,GAAGX,MAAM,CAACyC,QAAV,GAAqB,EAJ7C;AAAA,iCAMI;AAAK,YAAA,GAAG,EAAC,aAAT;AAAuB,YAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,gBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0FH","sourcesContent":["import { useRef, useEffect, useState } from 'react';\r\nimport Image from 'next/image';\r\nimport styles from './styles.module.scss';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport { usePlayer } from '../../contexts/PlayerContext';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\nexport function Player() {\r\n    const audioRef = useRef<HTMLAudioElement>(null);\r\n    const [progress, setProgress] = useState(0);\r\n    const {\r\n        episodeList,\r\n        currentEpisodeIndex,\r\n        isPlaying,\r\n        isLooping,\r\n        isShuffling,\r\n        togglePlay,\r\n        toggleLoop,\r\n        toggleShuffle,\r\n        setPlayingState,\r\n        playNext,\r\n        playPrevious,\r\n        hasNext,\r\n        hasPrevious\r\n    } = usePlayer();\r\n\r\n    useEffect(() => {\r\n        if (!audioRef.current) {\r\n            return;\r\n        }\r\n\r\n        if (isPlaying) {\r\n            audioRef.current.play();\r\n        } else {\r\n            audioRef.current.pause();\r\n        }\r\n\r\n    }, [isPlaying])\r\n\r\n    const episode = episodeList[currentEpisodeIndex];\r\n\r\n    return (\r\n        <div className={styles.playerContainer}>\r\n            <header>\r\n                <img src=\"/playing.svg\" alt=\"Tocando agora\" />\r\n                <strong>Tocando agora </strong>\r\n            </header>\r\n\r\n            { episode ? (\r\n                <div className={styles.currentEpisode}>\r\n                    <Image\r\n                        width={592}\r\n                        height={592}\r\n                        src={episode.thumbnail}\r\n                        objectFit=\"cover\"\r\n                    />\r\n                    <strong>{episode.title}</strong>\r\n                    <span>{episode.members}</span>\r\n                </div>\r\n\r\n\r\n            ) : (\r\n                <div className={styles.emptyPlayer} />\r\n            )}\r\n\r\n            <footer className={styles.empty}>\r\n                <div className={styles.progress}>\r\n                    <span>{ }</span>\r\n                    <div className={styles.slider}>\r\n                        {episode ? (\r\n                            <Slider\r\n                                trackStyle={{ backgroundColor: '#84d361' }}\r\n                                railStyle={{ backgroundColor: '#9f75ff' }}\r\n                                handleStyle={{ borderColor: '#84d361', borderWidth: 4 }}\r\n                            />\r\n                        ) : (\r\n                            <div className={styles.emptySlider} />\r\n                        )}\r\n                    </div>\r\n                    <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\r\n                </div>\r\n\r\n                {episode && (\r\n                    <audio\r\n                        src={episode.url}\r\n                        ref={audioRef}\r\n                        autoPlay\r\n                        loop={isLooping}\r\n                        onPlay={() => setPlayingState(true)}\r\n                        onPause={() => setPlayingState(false)}\r\n                    />\r\n                )}\r\n\r\n                <div className={styles.buttons}>\r\n                    <button\r\n                        type=\"button\"\r\n                        disabled={!episode || episodeList.length === 1}\r\n                        onClick={toggleShuffle}\r\n                        className={isShuffling ? styles.isActive : ''}\r\n                    >\r\n                        <img src=\"/shuffle.svg\" alt=\"Embaralhar\" />\r\n                    </button>\r\n                    <button type=\"button\" onClick={playPrevious} disabled={!episode || !hasPrevious}>\r\n                        <img src=\"/play-previous.svg\" alt=\"Tocar anterior\" />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className={styles.playButton}\r\n                        disabled={!episode}\r\n                        onClick={togglePlay}\r\n                    >\r\n                        {isPlaying\r\n                            ? <img src=\"/play.svg\" alt=\"Tocar\" />\r\n                            : <img src=\"/pause.svg\" alt=\"Pausar\" />\r\n                        }\r\n                    </button>\r\n                    <button type=\"button\" onClick={playNext} disabled={!episode || !hasNext}>\r\n                        <img src=\"/play-next.svg\" alt=\"Toca próximar\" />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        disabled={!episode}\r\n                        onClick={toggleLoop}\r\n                        className={isLooping ? styles.isActive : ''}\r\n                    >\r\n                        <img src=\"/repeat.svg\" alt=\"Repetir\" />\r\n                    </button>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}